version: '3.8'


services:
  sentinel:
    image: bladex/sentinel-dashboard:1.8.6
    restart: on-failure
    ports:
      - 8858:8858


  elasticsearch:
    restart: on-failure
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    container_name: elasticsearch
    hostname: elasticsearch
    network_mode: host
    privileged: true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
      - "http.host=0.0.0.0"
      - "node.name=es_node01"
      - "cluster.name=es_cluster"
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - "./deploy/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
#      - "/opt/config/es/plugins:/usr/share/elasticsearch/plugins:rw"
#      - "/opt/data/es/data:/usr/share/elasticsearch/data:rw"

  kibana:
    restart: always
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.5.0
    network_mode: host
    environment:
      - XPACK_MONITORING_COLLECTION_ENABLED="true"
    ports:
      - "5601:5601"
    volumes:
      - "./deploy/config/kibana.yml:/usr/share/kibana/config"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.5.0
    container_name: logstash
    network_mode: host
    ports:
      - "9600:9600"
    restart: always
    volumes:
      - "/opt/config/logstash/config:/usr/share/logstash/config"
      - "/opt/config/logstash/pipeline:/usr/share/logstash/pipeline"
      - "/opt/data/logstash:/usr/share/logstash/data"
      - "/opt/logs/logstash:/usr/share/logstash/logs"



  mysql8:
    image: mysql:8.0.30
    container_name: mysql8
    ports:
      - 3306:3306
    networks:
      - rocketmq
    command:
      --default-authentication-plugin=mysql_native_password
      --lower_case_table_names=1
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    restart: on-failure
  zookeeper:
    image: zookeeper
    ports:
      - 2181:2181
  admin:
    image: apache/dubbo-admin:latest
    depends_on:
      - zookeeper
    ports:
      - 10010:8080
    # the db driver path
#    volumes:
#      - "/mnt/opt-libs:/opt-libs"
    environment:
      - admin.registry.address=zookeeper://zookeeper:2181
      - admin.config-center=zookeeper://zookeeper:2181
      - admin.metadata-report.address=zookeeper://zookeeper:2181
      - dubbo.application.name=dubbo-admin
      - dubbo.registry.address=zookeeper://zookeeper:2181
      - mybatis-plus.global-config.db-config.id-type=none
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver
      # - spring.datasource.url=jdbc:mysql://xxx:3306/dubbo-admin?characterEncoding=utf8&connectTimeout=1000&socketTimeout=10000&autoReconnect=true
      # - spring.datasource.username=root
      # - spring.datasource.password=mysql
      # use internal h2 as database
      - spring.datasource.url=jdbc:h2:mem:~/dubbo-admin;
      - spring.datasource.username=sa

  namesrv:
    image: apache/rocketmq:5.2.0
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    networks:
      - rocketmq
    command: sh mqnamesrv
  broker:
    image: apache/rocketmq:5.2.0
    container_name: rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
      - 10912:10912
    environment:
      - NAMESRV_ADDR=rmqnamesrv:9876
    depends_on:
      - namesrv
    networks:
      - rocketmq
    command: sh mqbroker
  proxy:
    image: apache/rocketmq:5.2.0
    container_name: rmqproxy
    networks:
      - rocketmq
    depends_on:
      - broker
      - namesrv
    ports:
      - 8080:8080
      - 8081:8081
    restart: on-failure
    environment:
      - NAMESRV_ADDR=rmqnamesrv:9876
    command: sh mqproxy
networks:
  rocketmq:
    driver: bridge